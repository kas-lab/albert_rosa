# ============================================================
# ROS 2 Rolling base image with full desktop install
# ============================================================
FROM osrf/ros:rolling-desktop-full

ENV DEBIAN_FRONTEND=noninteractive

# ============================================================
# Development and build tools
# ============================================================
RUN apt-get update && apt-get install -y \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    python3-pip \
    git \
    build-essential \
    cmake \
    libpoco-dev \
    libeigen3-dev \
    alsa-utils \
    pulseaudio \
    mesa-utils \
 && (rosdep init || true) \
 && rosdep update \
 && rm -rf /var/lib/apt/lists/*

# ============================================================
# ROS 2 Rolling + ROS-GZ integration stack
# ============================================================
RUN apt-get update && apt-get install -y \
    ros-${ROS_DISTRO}-ros-gz-sim \
    ros-${ROS_DISTRO}-ros-gz-bridge \
    ros-${ROS_DISTRO}-rviz2 \
    ros-${ROS_DISTRO}-ros2-control \
    ros-${ROS_DISTRO}-ros2-controllers \
    ros-${ROS_DISTRO}-gz-ros2-control \
    ros-${ROS_DISTRO}-ros2controlcli \
    ros-${ROS_DISTRO}-rviz-default-plugins \
    ros-${ROS_DISTRO}-realsense2-camera \
    ros-${ROS_DISTRO}-realsense2-description \
    ros-${ROS_DISTRO}-control-toolbox \
    ros-${ROS_DISTRO}-robot-state-publisher \
    ros-${ROS_DISTRO}-robot-localization \
    ros-${ROS_DISTRO}-ament-cmake-clang-format \
    ros-${ROS_DISTRO}-moveit \
    ros-${ROS_DISTRO}-twist-mux \
    ros-${ROS_DISTRO}-joint-state-publisher \
    ros-${ROS_DISTRO}-xacro \
    ros-${ROS_DISTRO}-joint-state-publisher-gui \
 && rm -rf /var/lib/apt/lists/*

# ============================================================
# Fix vendor conflicts: purge + reinstall essentials
# ============================================================
RUN apt-get purge -y "ros-rolling-gz-*-vendor" "ros-rolling-sdformat-vendor" || true && \
    apt-get autoremove -y && \
    apt-get update && apt-get install -y \
      ros-${ROS_DISTRO}-gz-tools-vendor \
      ros-${ROS_DISTRO}-gz-sim-vendor \
      ros-${ROS_DISTRO}-gz-math-vendor \
      ros-${ROS_DISTRO}-gz-utils-vendor \
      ros-${ROS_DISTRO}-gz-transport-vendor \
      ros-${ROS_DISTRO}-gz-common-vendor \
      ros-${ROS_DISTRO}-gz-physics-vendor \
      ros-${ROS_DISTRO}-gz-rendering-vendor \
      ros-${ROS_DISTRO}-gz-plugin-vendor \
      ros-${ROS_DISTRO}-gz-sensors-vendor \
      ros-${ROS_DISTRO}-gz-gui-vendor \
      ros-${ROS_DISTRO}-sdformat-vendor \
      ros-${ROS_DISTRO}-gz-ros2-control \
      ros-${ROS_DISTRO}-ros2controlcli \
 && rm -rf /var/lib/apt/lists/*

# ============================================================
# Ensure ABI consistency (tf2, rclcpp, rviz stack)
# ============================================================
RUN apt-get update && apt-get install --reinstall -y \
    ros-${ROS_DISTRO}-rviz2 \
    ros-${ROS_DISTRO}-rviz-common \
    ros-${ROS_DISTRO}-rviz-rendering \
    ros-${ROS_DISTRO}-rviz-default-plugins \
    ros-${ROS_DISTRO}-tf2 \
    ros-${ROS_DISTRO}-tf2-ros \
    ros-${ROS_DISTRO}-tf2-msgs \
    ros-${ROS_DISTRO}-rclcpp \
    ros-${ROS_DISTRO}-rclcpp-components \
    ros-${ROS_DISTRO}-rclcpp-action \
    ros-${ROS_DISTRO}-ros-gz-sim \
    ros-${ROS_DISTRO}-ros-gz-bridge \
    ros-${ROS_DISTRO}-ros2-controllers \
    ros-${ROS_DISTRO}-ros2-control \
 && rm -rf /var/lib/apt/lists/*



# ============================================================
# Franka Emika dependencies (manual build if needed)
# ============================================================
# RUN git clone https://github.com/frankaemika/libfranka.git --recursive && \
#     cd libfranka && \
#     git checkout 0.13.2 && \
#     git submodule update --init --recursive && \
#     mkdir build && cd build && \
#     cmake -DCMAKE_BUILD_TYPE=Release .. && \
#     cmake --build . && \
#     make install
# ENV CMAKE_PREFIX_PATH=/usr/local/lib/cmake/Franka

# ============================================================
# TypeDB installation (optional)
# ============================================================
RUN apt-get update && apt-get install -y \
    software-properties-common \
    apt-transport-https \
    gnupg openjdk-17-jre \
 && gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 17507562824cfdcc \
 && gpg --export 17507562824cfdcc > /etc/apt/trusted.gpg.d/vaticle.gpg \
 && echo "deb https://repo.typedb.com/public/public-release/deb/ubuntu trusty main" > /etc/apt/sources.list.d/vaticle.list \
 && apt-get update \
 && apt-get install -y typedb=2.27.0 \
 && pip3 install --no-cache-dir --break-system-packages typedb-driver==2.27.0 \
 && rm -rf /var/lib/apt/lists/*

# ============================================================
# Source ROS in all future shells
# ============================================================
RUN echo "source /opt/ros/rolling/setup.bash" >> /etc/bash.bashrc

# ============================================================
# Realtime settings
# ============================================================
RUN groupadd realtime && \
    echo '@realtime soft rtprio 99'  >> /etc/security/limits.conf && \
    echo '@realtime soft priority 99' >> /etc/security/limits.conf && \
    echo '@realtime soft memlock 102400' >> /etc/security/limits.conf && \
    echo '@realtime hard rtprio 99'  >> /etc/security/limits.conf && \
    echo '@realtime hard priority 99' >> /etc/security/limits.conf && \
    echo '@realtime hard memlock 102400' >> /etc/security/limits.conf

# ============================================================
# GUI forwarding setup (RViz, Gazebo, etc.)
# ============================================================
ENV QT_X11_NO_MITSHM=1
ENV DISPLAY=:0
ENV LIBGL_ALWAYS_INDIRECT=0

# Optional: set model cache dir inside the image
ENV GZ_HOMEDIR=/root/.gz
