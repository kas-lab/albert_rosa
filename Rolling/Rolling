FROM osrf/ros:rolling-desktop-full-noble

# === ROS 2 Signing Key Fix ===
RUN rm -f /etc/apt/sources.list.d/ros2-latest.list /usr/share/keyrings/ros2-latest-archive-keyring.gpg && \
    apt-get update && apt-get install -y ca-certificates curl && \
    export ROS_APT_SOURCE_VERSION=$(curl -s https://api.github.com/repos/ros-infrastructure/ros-apt-source/releases/latest | grep -F "tag_name" | awk -F\" '{print $4}') && \
    curl -L -s -o /tmp/ros2-apt-source.deb "https://github.com/ros-infrastructure/ros-apt-source/releases/download/${ROS_APT_SOURCE_VERSION}/ros2-apt-source_${ROS_APT_SOURCE_VERSION}.$(. /etc/os-release && echo $VERSION_CODENAME)_all.deb" && \
    apt-get update && apt-get install -y /tmp/ros2-apt-source.deb && \
    rm -f /tmp/ros2-apt-source.deb && \
    apt-get update

# === Development and build tools ===
RUN apt-get install -y \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    python3-pip \
    git \
    build-essential \
    cmake \
    libpoco-dev \
    libeigen3-dev \
    alsa-utils \
    pulseaudio \
    mesa-utils && \
    (rosdep init || true) && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*

# === ROS 2 packages for Rolling ===
RUN apt-get update && apt-get install -y \
    ros-rolling-rviz2 \
    ros-rolling-rviz-default-plugins \
    ros-rolling-control-toolbox \
    ros-rolling-robot-state-publisher \
    ros-rolling-ros2-control \
    ros-rolling-ros2-controllers \
    ros-rolling-robot-localization \
    ros-rolling-ament-cmake-clang-format \
    ros-rolling-twist-mux \
    ros-rolling-joint-state-publisher \
    ros-rolling-xacro \
    ros-rolling-joint-state-publisher-gui \
    ros-rolling-gz-ros2-control \
    && rm -rf /var/lib/apt/lists/*

# === Extra Python dependencies (for Nav2/slam_toolbox builds) ===
RUN apt-get update && apt-get install -y \
    python3-setuptools \
    python3-yaml \
    python3-jinja2 \
    python3-typeguard \
    python3-catkin-pkg \
    python3-empy \
    python3-numpy \
    python3-lark \
    python3-u-msgpack \
    && rm -rf /var/lib/apt/lists/*

# Fallback pip installs (ensures correct versions available in venv)
# Use the venv created earlier
RUN apt-get update && apt-get install -y \
    software-properties-common \
    apt-transport-https \
    gnupg \
    openjdk-11-jre \
    python3-venv && \
    gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 17507562824cfdcc && \
    gpg --export 17507562824cfdcc > /etc/apt/trusted.gpg.d/vaticle.gpg && \
    echo "deb https://repo.typedb.com/public/public-release/deb/ubuntu noble main" \
        > /etc/apt/sources.list.d/vaticle.list && \
    apt-get update && \
    apt-get install -y typedb=2.28.3 && \
    python3 -m venv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip

# --- NOW pip install your extras into the venv ---
RUN /opt/venv/bin/pip install --no-cache-dir \
    empy catkin_pkg lark u-msgpack-python numpy pyyaml jinja2 typeguard \
    "typedb-driver>=2.28,<2.29"

# Ensure venv Python is default
ENV PATH="/opt/venv/bin:$PATH"

# Source ROS in all future shells
RUN echo "source /opt/ros/rolling/setup.bash" >> /etc/bash.bashrc

# === Realtime group and limits ===
RUN groupadd realtime && \
    echo '@realtime soft rtprio 99' >> /etc/security/limits.conf && \
    echo '@realtime soft priority 99' >> /etc/security/limits.conf && \
    echo '@realtime soft memlock 102400' >> /etc/security/limits.conf && \
    echo '@realtime hard rtprio 99' >> /etc/security/limits.conf && \
    echo '@realtime hard priority 99' >> /etc/security/limits.conf && \
    echo '@realtime hard memlock 102400' >> /etc/security/limits.conf

# === GUI env for RViz etc. ===
ENV QT_X11_NO_MITSHM=1
ENV DISPLAY=:0
ENV LIBGL_ALWAYS_INDIRECT=0

